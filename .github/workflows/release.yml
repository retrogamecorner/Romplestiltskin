name: Continuous Build

on:
  push:
    branches:
      - main # Change to 'master' if that is your default branch

jobs:
  build:
    name: Build for ${{ matrix.os-name }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            os-name: Windows
            output-name: Romplestiltskin-Windows.exe
            pyinstaller-output: Romplestiltskin.exe
          - os: macos-latest
            os-name: macOS
            output-name: Romplestiltskin-macOS
            pyinstaller-output: Romplestiltskin
          - os: ubuntu-latest
            os-name: Linux
            output-name: Romplestiltskin-Linux
            pyinstaller-output: Romplestiltskin

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        # FIX: Added --add-data flags to include non-code assets like images and themes.
        # This is the crucial step to prevent FileNotFoundError in the packaged app.
        run: |
          pyinstaller --onefile --noconsole --name "Romplestiltskin" \
            --paths src \
            --add-data "src/ui/flags:ui/flags" \
            --add-data "src/ui/texture:ui/texture" \
            --add-data "src/ui/theme.py:ui" \
            --hidden-import PyQt6.sip \
            main.py

      - name: Rename executable for release
        run: mv dist/${{ matrix.pyinstaller-output }} dist/${{ matrix.output-name }}
        shell: bash

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Romplestiltskin-${{ matrix.os-name }}
          path: dist/${{ matrix.output-name }}
